function roo=MMroots(dimA,a,model)
%
% camino.m--------------------------------------------------------------
% Calcultes the roots of the diffusion eigenfunctions 
% 
% roo=MMroots(dimA,a,model)
% 
% Description: Returns the root value, root order and eigenfunction order
% for the diffusion eigenfunctions for different restriction geometries
%
% Parameters: 
% roo - [dimA,3] vector for planar restriction; stores the index of the
% eigenfunction (0 for cos, 1 for sine), the root value and normalization
% coefficient
%     - [dimA,4] vector for cylindrical restriction; stores the order of bessel
% function, the root order, root value and normalization coefficient
%     - [dimA,5] vector for spherical restriction; stores the order of bessel
% function, the order of the legendre polynomial, the root order, 
% root value and normalization coefficient
% dimA - number of roots required
% a - size of restriction (radius for sphere and cylinder restriction,
% half the distance between plates for planar restriction)
% model - 0 = sphere, 1 = cylinder, 2 = parallel planes 
%
%------------------------------------------------------------------------
% This file is part of the camino.m toolbox.
% Copyright (c) 2015, UCL Microstructure Imaging Group (MIG), All rights reserved.
% Distributed under the Modified BSD Licence (see: LICENSE.pdf).
%
% Authors:
%   Ivana Drobnjak (i.drobnjak@ucl.ac.uk)
%   Andrada Ianus (a.ianus.11@ucl.ac.uk)
%   Rafael N. Henriques (rafael.henriques@neuro.fchampalimaud.org)

if model== 1 % cylinder
    roo = zeros(dimA,4);
    % bessel order
    bessel_order = [ 0 1 2 0 3 4 1 5 2 0 6 3 1 7 4 8 2 0 5 9 3 1 6 10 4 11 7 2 0 12 5 8 3	1 13 6 9 4 14 2 10 0 7 15 5	11 8 3 1 16];
    % root order
    root_order = [0 1 1 1 1 1 2 1	2 2	1 2	3 1	2 1	3 3	2 1	3 4	2 1	3 1	2 4	4 1	3 2	4 5	1 3	2 4	1 5	2 5	3 1	4 2	3 5	6 1];
    % root values
    root_values =[ 0	1.84118378134066	3.05423692822714	3.83170597020751	4.20118894121053	5.31755312608399...
        5.33144277352503	6.41561637570024	6.70613319415846	7.01558666981562	7.50126614468415	8.01523659837595	8.53631636634629...
        8.57783648971408    9.28239628524161	9.64742165199722	9.96946782308760	10.1734681350627	10.5198608737723	10.7114339706999...
        11.3459243107430	11.7060049025921	11.7349359530427	11.7708766749556	12.6819084426389	12.8264912280335	12.9323862370896...
        13.1703708560161	13.3236919363142	13.8788430696973	13.9871886301403	14.1155189078946	14.5858482861670	14.8635886339090...
        14.9283744929647	15.2681814610979	15.2867376673329	15.9641070377316	15.9754388074843	16.3475223183218	16.4478527484865...
        16.4706300508776	16.5293658843669	17.0203232728278	17.3128424878846	17.6002665574683	17.7740123669153	17.7887478660665...
        18.0155278626818	18.0632649937237];

    roo(:,1) = bessel_order(1:dimA)';
    roo(:,2) = root_order(1:dimA)';
    roo(:,3) = root_values(1:dimA)';
    for k=1:dimA
    roo(k,4)=MMnorm(roo(k,:),a,model);
    end
    
elseif model == 0 % sphere
     roo = zeros(dimA,5);
  % spherical bessel orders
    bessel_order = [ 0, 1 1 1, 2 2 2 2 2 ... (2,1)
        0, 3 3 3 3 3 3 3, 4 4 4 4 4 4 4 4 4 ... (4, 1) 26
        1 1 1, 5 5 5 5 5 5 5 5 5 5 5,...(5, 1) 40
        2 2 2 2 2, 0,  6 6 6 6 6 6 6 6 6 6 6 6 6, ... (6, 1) 59
        3 3 3 3 3 3 3, 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 ... (7, 1) 81
        1 1 1, 4 4 4 4 4 4 4 4 4 ... (4, 2) 93
        8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 ... (8, 1) 110
        2 2 2 2 2 ... (2, 3) 115
        0, 5 5 5 5 5 5 5 5 5 5 5 ... (5, 2)
        9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 ... (9, 1) 146
        ];
    % root order
    root_order = [ 0, 1 1 1, 1 1 1 1 1,... (2,1)
        1, 1 1 1 1 1 1 1, 1 1 1 1 1 1 1 1 1,   ... (4, 1) 26
        2 2 2,   1 1 1 1 1 1 1 1 1 1 1,... (5, 1) 40
        2 2 2 2 2, 2,  1 1 1 1 1 1 1 1 1 1 1 1 1,... (6, 1) 59
        2 2 2 2 2 2 2, 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ... (7, 1) 81
        3 3 3, 2 2 2 2 2 2 2 2 2 ... (4, 2) 93
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ... (8, 1) 110
        3 3 3 3 3, ... (2, 3) 115
        3, 2 2 2 2 2 2 2 2 2 2 2 ... (5, 2) 127
        1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ... (9, 1) 146
        ];
    
    % index of the legendre polynomials possible
    legendre_order = [ 0, 0 -1 1, 0 -1 1 -2 2 ...
        0, 0 -1 1 -2 2 -3 3, 0 -1 1 -2 2 -3 3 -4 4,  ...
        0 -1 1, 0 -1 1 -2 2 -3 3 -4 4 -5 5, ...
        0 -1 1 -2 2, 0, 0 -1 1 -2 2 -3 3 -4 4 -5 5 -6 6, ...  (6, 1) 59
        0 -1 1 -2 2 -3 3, 0 -1 1 -2 2 -3 3 -4 4 -5 5 -6 6 -7 7, ... (7, 1) 81
        0 -1 1, 0 -1 1 -2 2 -3 3 -4 4,  ... (4, 2) 93
        0 -1 1 -2 2 -3 3 -4 4 -5 5 -6 6 -7 7 -8 8, ... (8, 1) 110
        0 -1 1 -2 2 ... (2, 3) 115
        0, 0 -1 1 -2 2 -3 3 -4 4 -5 5,... (5, 2) 127
        0 -1 1 -2 2 -3 3 -4 4 -5 5 -6 6 -7 7 -8 8 -9 9 ... (9, 1) 146
        ];
    
    % root values
    root_values =[ 0 ... 0,0 (1)
        2.08157597781810 2.08157597781810 2.08157597781810  ... 1,1 (4)
        3.34209365736569 3.34209365736569 3.34209365736569 3.34209365736569 3.34209365736569 ... 2,1 (9)
        4.49340945790906 ... 0,1 (10)
        4.51409964703228 4.51409964703228 4.51409964703228 4.51409964703228 4.51409964703228 4.51409964703228 4.51409964703228 ... 3,1 (17)
        5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 5.64670362043680 ... 4,1 (26)
        5.94036999057271 5.94036999057271 5.94036999057271 ... 1,2 (29)
        6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413 6.75645633020413... 5,1 (40)
        7.28993230409335 7.28993230409335 7.28993230409335 7.28993230409335 7.28993230409335 ... 2,2 (45)
        7.72525183693771 ... 0,2 (46)
        7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 7.85107767947440 ... 6,1 (59)
        8.58375495636577 8.58375495636577 8.58375495636577 8.58375495636577 8.58375495636577 8.58375495636577 8.58375495636577 ... 3, 2 (66)
        8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284  8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 8.93483887835284 ... 7,1(81)
        9.20584014293667 9.20584014293667  9.20584014293667  ... 1,3 (84)
        9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014 9.84044604304014... 4,2 (93)
        10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 10.0103707462829 ... 8,1 (110)
        10.6138550423169 10.6138550423169 10.6138550423169 10.6138550423169 10.6138550423169 ... 2,3 (115)
        10.9041216594289... 0, 3 (116)
        11.0702068737291  11.0702068737291  11.0702068737291 11.0702068737291  11.0702068737291  11.0702068737291 11.0702068737291  11.0702068737291  11.0702068737291 11.0702068737291  11.0702068737291 ... 5,2 (127)
        11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 11.0794183899499 ... 9,1 (146)
        ];
    
    roo(:,1) = bessel_order(1:dimA)';
    roo(:,2) = legendre_order(1:dimA)';
    roo(:,3) = root_order(1:dimA)';
    roo(:,4) = root_values(1:dimA)';
    for k=1:dimA
    roo(k,5)=MMnorm(roo(k,:),a,model);
    end 
elseif model == 2 % planes
    roo = zeros(dimA,3);
    % index of the eigenfunction - 0 for cos, 1 for sine
    eigf_index = mod(0:dimA-1,2);
    % eigenvalue
    root_values = (0:dimA-1)*pi/2;
    roo(:,1) = eigf_index';
    roo(:,2) = root_values';
    for k=1:dimA
    roo(k,3)=MMnorm(roo(k,:),a,model);
    end 
    
    
else error('Model index not specified. 0 for sphere, 1 for cylinder, 2 for planar.')
end

